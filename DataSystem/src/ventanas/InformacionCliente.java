/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.sql.*;
import clases.Conexion;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import static ventanas.GestionarClientes.IDcliente_update;

/**
 *
 * @author CRISTIAN
 */
public class InformacionCliente extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    int IDcliente_update = 0;
    public static int IDequipo = 0;
    String user = "";

    /**
     * Creates new form InformacionCliente
     */
    public InformacionCliente() {
        initComponents();
        user = Login.user;
        IDcliente_update = GestionarClientes.IDcliente_update;

        setSize(600, 600);
        setResizable(false);
        setTitle("Información cliente - Sesión de " + user);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select * from clientes where id_cliente = '" + IDcliente_update + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                setTitle("Información del cliente " + rs.getString("nombre_cliente") + " - Sesión de " + user);
                titulo.setText("Información del cliente " + rs.getString("nombre_cliente"));

                txt_NombreCliente.setText(rs.getString("nombre_cliente"));
                txt_EmailCliente.setText(rs.getString("mail_cliente"));
                txt_TelefonoCliente.setText(rs.getString("tel_cliente"));
                txt_DireccionCliente.setText(rs.getString("dir_cliente"));
                txt_UltimaModificacion.setText(rs.getString("ultima_modificacion"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar datos " + e);
            JOptionPane.showMessageDialog(null, "Error al mostrar información, Contacte al administrador.");
        }

        try {
            Connection cn2 = Conexion.conectar();
            PreparedStatement pst2 = cn2.prepareStatement("select id_equipo, tipo_equipo, marca, estatus from equipos where id_cliente = '" + IDcliente_update + "'");

            ResultSet rs2 = pst2.executeQuery();

            tablaEquipos = new JTable(model);
            jScrollPane_equipos.setViewportView(tablaEquipos);

            model.addColumn("ID equipo");
            model.addColumn("Tipo de equipo");
            model.addColumn("Marca");
            model.addColumn("Estatus");

            while (rs2.next()) {
                Object[] fila = new Object[4];
                for (int i = 0; i < 4; i++) {
                    fila[i] = rs2.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn2.close();
        } catch (SQLException e) {
            System.err.println("Error en el llenado de la tabla de equipos. " + e);
        }

        tablaEquipos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = tablaEquipos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDequipo = (int) model.getValueAt(fila_point, columna_point);
                    InformacionCliente informacionCliente = new InformacionCliente();
                    informacionCliente.setVisible(true);
                }
            }
        });
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_NombreCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_EmailCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_TelefonoCliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_UltimaModificacion = new javax.swing.JTextField();
        txt_DireccionCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        registrar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane_equipos = new javax.swing.JScrollPane();
        tablaEquipos = new javax.swing.JTable();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titulo.setText("Información del cliente");
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nombre:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        txt_NombreCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_NombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 230, 25));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Email:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        txt_EmailCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_EmailCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 230, 25));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Teléfono:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txt_TelefonoCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_TelefonoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 230, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Última modificación por:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        txt_UltimaModificacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_UltimaModificacion.setEnabled(false);
        getContentPane().add(txt_UltimaModificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 170, 25));

        txt_DireccionCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_DireccionCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 230, 25));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Dirección:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        registrar.setText("Registrar equipo");
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });
        getContentPane().add(registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 140, 25));

        actualizar.setText("Actualizar cliente");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 140, 25));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/impresora.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 140, 130));

        tablaEquipos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaEquipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane_equipos.setViewportView(tablaEquipos);

        getContentPane().add(jScrollPane_equipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 550, 240));
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        RegistroEquipo registroEquipo = new RegistroEquipo();
        registroEquipo.setVisible(true);
    }//GEN-LAST:event_registrarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed

        int validacion = 0;
        String nombre, mail, telefono, direccion;

        nombre = txt_NombreCliente.getText().trim();
        mail = txt_EmailCliente.getText().trim();
        telefono = txt_TelefonoCliente.getText().trim();
        direccion = txt_DireccionCliente.getText().trim();

        if (nombre.equals("")) {
            txt_NombreCliente.setBackground(Color.RED);
            validacion++;
        }
        if (mail.equals("")) {
            txt_EmailCliente.setBackground(Color.RED);
            validacion++;
        }
        if (telefono.equals("")) {
            txt_TelefonoCliente.setBackground(Color.RED);
            validacion++;
        }
        if (direccion.equals("")) {
            txt_DireccionCliente.setBackground(Color.RED);
            validacion++;
        }

        if (validacion == 0) {

            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement("update clientes set nombre_cliente =?, mail_cliente =?, tel_cliente =?, dir_cliente =?, ultima_modificacion =? where id_cliente = '" + IDcliente_update + "'");
                
                pst.setString(1, nombre);
                pst.setString(2, mail);
                pst.setString(3, telefono);
                pst.setString(4, direccion);
                pst.setString(5, user);
                
                pst.executeUpdate();
                cn.close();
                
                Limpiar();
                
                txt_NombreCliente.setBackground(Color.GREEN);
                txt_EmailCliente.setBackground(Color.GREEN);
                txt_TelefonoCliente.setBackground(Color.GREEN);
                txt_DireccionCliente.setBackground(Color.GREEN);
                txt_UltimaModificacion.setText(user);
                
                JOptionPane.showMessageDialog(null, "Actualización exitosa.");
                this.dispose();
                
            } catch (SQLException e) {
                System.err.println("Error al actualizar cliente. " + e);
                JOptionPane.showMessageDialog(null, "Error al actualizar cliente. Contacte al Administrador");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos.");
        }

    }//GEN-LAST:event_actualizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Document documento = new Document();
        try {
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InformacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InformacionCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane_equipos;
    private javax.swing.JButton registrar;
    private javax.swing.JTable tablaEquipos;
    private javax.swing.JLabel titulo;
    private javax.swing.JTextField txt_DireccionCliente;
    private javax.swing.JTextField txt_EmailCliente;
    private javax.swing.JTextField txt_NombreCliente;
    private javax.swing.JTextField txt_TelefonoCliente;
    private javax.swing.JTextField txt_UltimaModificacion;
    // End of variables declaration//GEN-END:variables
    
    public void Limpiar(){
        txt_NombreCliente.setText("");
        txt_EmailCliente.setText("");
        txt_TelefonoCliente.setText("");
        txt_DireccionCliente.setText("");
    }
}
